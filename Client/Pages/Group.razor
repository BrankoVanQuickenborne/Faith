@page "/group"
@using Faith.Shared.DTOs
@inject HttpClient Http
@attribute [Authorize]

<h1>Leefgroep</h1>

@if (users == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Email</th>
                <th>Role</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in users)
            {
                <tr>
                    <td>@user.FirstName</td>
                    <td>@user.FamilyName</td>
                    <td>@user.Email</td>
                    <td>@user.Role</td>
                    <td width="12%">
                        <AuthorizeView Roles="Administrator,Monitor">
                            <a class="nav-link" href="delete-user/@user.UserID.ToString()">
                                <span class="oi oi-circle-x" style="color: #b00;"></span> Delete
                            </a>
                        </AuthorizeView>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    @if (loggedInUser == null) {
        <p><em>Loading...</em></p>
    } else {
        @if (loggedInUser.Youngsters.Count < 10) {
            <AuthorizeView Roles="Administrator,Monitor">
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="add-user">
                        <span class="oi oi-plus" aria-hidden="true"></span> Add User
                    </NavLink>
                </div>
            </AuthorizeView>
        } else {
            <p>You already have 10 Youngsters you are monitoring, that's enough!</p>
        }
    }
}

@code {
    private UserDTO[] users;
    private UserDTO loggedInUser;

    protected override async Task OnInitializedAsync()
    {
        loggedInUser = await Http.GetFromJsonAsync<UserDTO>($"/api/user/get-logged-in-user");
        users = await Http.GetFromJsonAsync<UserDTO[]>($"/api/user/get-all-users-for-monitor/{loggedInUser.UserID}");
    }
}
